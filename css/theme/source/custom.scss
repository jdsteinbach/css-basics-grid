/**
 * Black theme for reveal.js. This is the opposite of the 'white' theme.
 *
 * Copyright (C) 2015 Hakim El Hattab, http://hakim.se
 */


// Default mixins and settings -----------------
@import "../template/mixins";
@import "../template/settings";
// ---------------------------------------------

// Override theme settings (see ../template/settings.scss)
$backgroundColor: #2c313e;
$shadowColor: #60569c;
$shadowColorAlt: #5c6443;

$mainColor: #ebecf0;
$headingColor: #ebecf0;

$mainFontSize: 38px;
$mainFont: Soleto, soleto, Helvetica, sans-serif;
$codeFont: Operator Mono, Input Code, Source Code Pro, monospace;
$headingFont: $mainFont;
$headingTextShadow: none;
$headingLetterSpacing: normal;
$headingTextTransform: uppercase;
$headingFontWeight: 700;
$linkColor: lighten($shadowColor, 40%);
$linkColorHover: lighten($linkColor, 10%);
$selectionBackgroundColor: lighten($linkColor, 20%);

$heading1Size: 2em;
$heading2Size: 1.75em;
$heading3Size: 1.25em;
$heading4Size: 1em;

$blockMargin: $mainFontSize / 1.25;
$headingMargin: 0 0 $blockMargin;

$accentColor: mix(#dac935, $mainColor, 15%);
$codeColor: mix($shadowColorAlt, $mainColor, 33%);

section.has-light-background {
  &,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    color: #2c313e;
  }
}

body {
  font-family: $mainFont !important;
}

.reveal section {
  font-weight: 400;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: antialiased;
  font-feature-settings: liga frac ordn;

  h1 {
    font-weight: normal;
  }

  h2 {
    color: $accentColor;
    text-shadow: 1px 1px 0 $shadowColorAlt,
                 2px 2px 0 $shadowColorAlt,
                 3px 3px 0 $shadowColorAlt,
                 4px 4px 0 $shadowColorAlt;

   em {
    display: block;
    color: $mainColor;
    text-shadow: 1px 1px 0 $shadowColor,
                 2px 2px 0 $shadowColor,
                 3px 3px 0 $shadowColor,
                 4px 4px 0 $shadowColor;
    font-style: normal;
    font-weight: inherit;
   }
  }

  h1,
  h3 {
    text-shadow: 1px 1px 0 $shadowColor,
                 2px 2px 0 $shadowColor,
                 3px 3px 0 $shadowColor,
                 4px 4px 0 $shadowColor;

    em {
      display: block;
      font-style: normal;
      font-weight: bold;
      margin-top: 1.25em;
      color: $accentColor;
      text-shadow: 1px 1px 0 $shadowColorAlt,
                   2px 2px 0 $shadowColorAlt,
                   3px 3px 0 $shadowColorAlt,
                   4px 4px 0 $shadowColorAlt;
    }
  }

  h3 em {
    margin-top: .5em;
  }

  h1, h2, h3 {
    letter-spacing: 0.03125em;
  }

  p,
  li {
    max-width: 16em;
    margin-left: auto;
    margin-right: auto;
    text-shadow: 0 0 .25em black;
    text-align: left;
  }

  .big-p {
    font-size: $heading1Size;
    font-weight: bold;
    text-transform: uppercase;
    text-align: center;
  }

  .output {
    background-color: rgba($mainColor, .1);
    text-align: left;
    font-size: .8em;

    > * {
      background-color: $shadowColor;
    }
  }

  pre {
    font-size: .7em;
  }

  a {
    text-decoration: underline;
  }

  table {
    th {
      vertical-align: bottom;
    }
    th,
    td {
      text-align: center;
    }
  }

  .color-component,
  [style*=bgc] {
    appearance: none;
    border: 0;
    font-size: 1em;
    display: inline-block;
    vertical-align: middle;
    height: auto;
    width: auto;
    max-width: 100%;
    margin: .125em;
    padding: .5em;
    flex: 0 0 auto;
    font-family: $codeFont !important;
    background-color: $backgroundColor;
    color: $mainColor;
    text-align: center;
    text-shadow: 0 1px 1px $backgroundColor, -1px 1px 1px $backgroundColor,  1px 1px 1px $backgroundColor;

    &.light-bg {
      color: $backgroundColor;
      background-color: $linkColor;
      text-shadow: 0 1px 1px $mainColor, -1px 1px 1px $mainColor,  1px 1px 1px $mainColor;
    }

    + svg {
      margin-left: 1em;
      display: inline-block;
      vertical-align: middle;
    }
  }

  .striped {
    padding: .125em;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    background-image: repeating-linear-gradient(
      45deg,
      mix($backgroundColor, $shadowColor, 61.8%) 0,
      mix($backgroundColor, $shadowColor, 61.8%) 10px,
      $backgroundColor 10px,
      $backgroundColor 20px
      );
  }

  .vue-select,
  .vue-input {
    box-sizing: border-box;
    appearance: none;
    display: inline-block;
    width: 45%;
    margin: 0 auto .25em;
    padding: 0 .25em;
    border: 2px solid $linkColor;
    border-radius: 0;
    font-size: $mainFontSize;
    font-family: $codeFont !important;
    background: transparent;
    color: $mainColor;

    &:focus {
      outline: none;
      border-color: $accentColor;
    }
  }

  .vue-textarea {
    width: 100%;
    padding: .25em;
    background-color: rgba($mainColor, .05);
    color: $accentColor;
    text-shadow: 0 0 .25em black;
  }

  .vue-filter-image {
    border: 0;
  }

  .vue-label {
    display: block;
    text-align: center;
  }

  .vue-label--property {
    font-family: $codeFont !important;
    color: $codeColor;
        text-shadow: 0 0 .25em black;
    text-align: left;

    &::after {
      content: ':'
    }
  }

  .vue-checkbox {
    appearance: none;
    position: relative;
    width: 2em;
    height: 2em;
    vertical-align: middle;
    margin-top: -.5em;

    &::before {
      position: absolute;
      top: 0;
      left: 0;
      display: block;
      content: '';
      width: inherit;
      height: inherit;
      border: 2px solid $shadowColorAlt;
      background-color: $backgroundColor;
    }

    &::after {
      content: '';
      display: block;
      position: absolute;
      top: 0;
      left: -2px;
      width: inherit;
      height: 1em;
      transform-origin: center;
      transform: scale(0) rotate(-45deg);
      transition: transform 150ms ease-in-out;
      border: 4px solid $mainColor;
      border-width: 0 0 8px 8px;
    }

    &:checked::after {
      transform: scale(1) rotate(-45deg);
    }
  }

  .vue-border {
    margin: 1em auto .25em;
    padding: 0 .25em;
    border: 2px solid $linkColor;

    .vue-input {
      margin-bottom: 0;
      border: none;
      background-color: transparent;
    }

    .vue-label {
      padding: 0 .25em;
      font-weight: light;
    }
  }

  .ce-text {
    text-align: initial;
  }

  .image-grid {
    display: grid;
    grid-gap: 0 .5em;
    width: 100%;

    img {
      width: auto;
      border: 0;
    }

    @for $i from 1 through 6 {
      &--#{$i} {
        grid-template-columns: repeat($i, 1fr);
      }
    }
  }

  .center {
    text-align: center;
  }

  .hidden-label {
    display: none;
  }

  .invisible-hr {
    border: 0;
    height: 0;
    background: transparent;
  }

  a.pen {
    height: 2.618rem;
    width: 2.618rem;
    box-sizing: border-box;
    position: absolute;
    right: 0;
    bottom: 0;
    font-size: 0;
    border-radius: 1rem;
    background-color: $linkColor;
    background-image: url("/images/codepen.svg");
    background-position: center;
    background-repeat: no-repeat;
    background-size: 1.618rem;

    &:hover,
    &:active,
    &:focus {
      border-color: $linkColorHover;
    }
  }
}

#colophon {
  position: fixed;
  right: 20px;
  bottom: 20px;
  left: 20px;
  text-align: center;
  opacity: .5;
  font-style: italic;
  font-size: 26px;
  letter-spacing: .0625em;
  z-index: 1;
}

code {
  font-family: $codeFont !important;
  color: $codeColor;

  :not(pre) > & {
    &::before,
    &::after {
      content: '`';
    }
  }

  h1 &,
  h2 &,
  h3 & {
    color: inherit;
  }
}

.col-wrapper {
  display: flex;
  justify-content: stretch;
  align-items: stretch;

  > * {
    flex: 0 1 48%;
    width: 48%;
  }
}

[contenteditable] {
  &:focus {
    outline: none;
  }
}

style[contenteditable] {
  display: block;
  font-family: $codeFont !important;
  font-size: .7em;
  white-space: pre;
  text-align: left;
  border: 2px solid $linkColor;
  padding: 1ch;
  margin: 1em auto;
  color: $accentColor;

  &:focus {
    box-shadow: 0 0 0 2px $linkColor;
  }
}


// Theme template ------------------------------
@import "../template/theme";

// ---------------------------------------------
